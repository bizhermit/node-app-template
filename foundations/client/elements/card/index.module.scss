@use "../../styles/var" as var;

@layer base {

  .wrap {
    --card-trans-time: 0.3s;

    box-sizing: border-box;
    display: flex;
    flex-wrap: nowrap;
    justify-content: stretch;
    align-items: stretch;
    min-height: 0;
    min-width: 0;
    flex: none;
    border-radius: var(--radius);
    box-shadow: 0 .1rem .4rem 0 var(--c-shadow) !important;
    overflow: hidden;
    background: var(--c-pure);
    color: var(--c-base_);

    &[data-direction="vertical"] {
      flex-direction: column;

      >:is(.header, .footer) {
        >.label {
          padding: 0 var(--b-s);
        }
      }

      >.main {
        grid-template-rows: 0fr;
        transition: height var(--card-trans-time),
          grid-template-rows var(--card-trans-time);

        &:not([data-first="true"]) {
          border-top: 0.1rem solid var(--s-color, var(--c-border));
        }

        &:not([data-last="true"]) {
          border-bottom: 0.1rem solid var(--s-color, var(--c-border));
        }
      }

      >.check {
        &:checked {
          +.main {
            grid-template-rows: 1fr;
          }
        }

        &:not(:checked) {
          +.main {
            &:is([data-resize="true"], [data-resize="y"]) {
              &[style] {
                height: 0 !important;
              }
            }
          }
        }
      }
    }

    &[data-direction="horizontal"] {
      flex-direction: row;

      >:is(.header, .footer) {
        writing-mode: vertical-rl;

        >.label {
          padding: var(--b-s) 0;
        }
      }

      >.main {
        grid-template-columns: 0fr;
        transition: width var(--card-trans-time),
          grid-template-columns var(--card-trans-time);

        &:not([data-first="true"]) {
          border-left: 0.1rem solid var(--s-color, var(--c-border));
        }

        &:not([data-last="true"]) {
          border-right: 0.1rem solid var(--s-color, var(--c-border));
        }
      }

      >.check {
        &:checked {
          +.main {
            grid-template-columns: 1fr;
          }
        }

        &:not(:checked) {
          +.main {
            &:is([data-resize="true"], [data-resize="x"]) {
              &[style] {
                width: 0 !important;
              }
            }
          }
        }
      }
    }
  }

  :is(.header, .footer) {
    box-sizing: border-box;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    min-height: var(--cs-m);
    min-width: var(--cs-m);
    background: var(--s-color, transparent);
    color: var(--s-color_, inherit);
    overflow: hidden;

    &[data-clickable="true"] {
      cursor: pointer;
      user-select: none;
    }

    &[data-pos="start"] {
      >.icon {
        order: 1;
      }

      >.label {
        order: 2;
      }
    }

    &[data-pos="end"] {
      >.icon {
        order: 2;
      }

      >.label {
        order: 1;
      }
    }

    &[data-pos="none"] {
      >.icon {
        display: none;
      }
    }
  }

  .label {
    box-sizing: border-box;
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    flex: 1 1 0rem;

    &[data-align="start"] {
      justify-content: flex-start;
    }

    &[data-align="center"] {
      justify-content: center;
    }

    &[data-align="end"] {
      justify-content: flex-end;
    }
  }

  .icon {
    box-sizing: border-box;
    height: var(--cs-m);
    width: var(--cs-m);
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
  }

  .main {
    box-sizing: border-box;
    display: grid;
    overflow: hidden;
    min-width: 0;
    min-height: 0;
    position: relative;
  }

  .content {
    --s-color: initial;
    --s-color_: initial;

    box-sizing: border-box;
    overscroll-behavior: contain;
    overflow: auto;
    min-width: 0;
    min-height: 0;
  }

  .check {
    display: none;
  }

}