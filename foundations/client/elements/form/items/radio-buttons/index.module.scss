@use "../../../../styles/mixins" as mixins;
@use "../../../../styles/var" as var;

@layer base {

  .main {
    &[data-disabled="false"] {
      >.item {
        &:focus {
          @include mixins.focusOutline(var(--s-color, var(--c-border)));
        }

        &[data-appearance="button"] {
          &:focus {
            outline-offset: 0.1rem;
          }
        }
      }
    }

    &[data-editable="true"] {
      >.item {
        &[data-state="active"] {
          cursor: pointer;
          user-select: none;

          @include mixins.crossHover {
            &[data-appearance="button"] {
              @include mixins.buttonHoverAnimation(var(--s-color, var(--c-border)));
  
              &:active {
                @include mixins.buttonHoverActive;
              }
            }
  
            &:is([data-appearance="point"], [data-appearance="check"], [data-appearance="check-fill"]) {
              >.check {
                &::before {
                  @include mixins.buttonHoverAnimation(var(--s-color, var(--c-border)));
                }
              }
  
              &:active {
                @include mixins.buttonHoverActive;
              }
            }
          }

          >.check {
            &::before {
              background-color: var(--c-input);
            }
          }
        }

        &:is([data-state="readonly"], [data-state="disabled"]) {
          cursor: not-allowed;

          >.check {
            &::before {
              background-color: transparent !important;
            }
          }

          &[data-appearance="button"] {
            >.content {
              background-color: transparent !important;
            }
          }
        }

        &[data-state="disabled"] {
          opacity: #{var.$disabledOpacity};
        }

        &[data-state="hidden"] {
          display: none;
        }
      }

      &[data-error="true"] {
        >.item {
          >.check {
            &::before {
              background: var(--c-error);
            }
          }
        }
      }
    }

    &[data-direction="horizontal"] {
      flex-wrap: wrap;

      >.item {
        &[data-appearance="button"] {
          &:first-child {
            >.content {
              border-top-left-radius: var(--radius);
              border-bottom-left-radius: var(--radius);
            }
          }

          &:last-child {
            >.content {
              border-top-right-radius: var(--radius);
              border-bottom-right-radius: var(--radius);
            }
          }

          >.content {
            >.label {
              padding-left: #{var.$textPaddingBold};
              padding-right: #{var.$textPaddingBold};
            }
          }
        }

        >.content {
          >.label {
            padding-right: #{var.$textPaddingThin};
          }
        }
      }
    }

    &[data-direction="vertical"] {
      flex-direction: column;
      align-items: stretch;

      >.item {
        &[data-appearance="button"] {
          flex: 1 0 0rem;

          &:first-child {
            >.content {
              border-top-left-radius: var(--radius);
              border-top-right-radius: var(--radius);
            }
          }

          &:last-child {
            >.content {
              border-bottom-left-radius: var(--radius);
              border-bottom-right-radius: var(--radius);
            }
          }

          >.content {
            >.label {
              padding-left: #{var.$textPaddingBold};
              padding-right: #{var.$textPaddingBold};
            }
          }
        }

        >.content {
          >.label {
            padding-right: #{var.$textPadding};
          }
        }
      }
    }

    &[data-outline="true"] {
      gap: var(--b-s);
    }
  }

  .item {
    box-sizing: border-box;
    position: relative;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    min-width: var(--cs-m);
    min-height: var(--cs-m);
    z-index: 0;
    border-radius: var(--radius);

    &:focus {
      z-index: 1;
    }

    &[data-selected="true"] {
      >.check {
        &::after {
          opacity: 1;
        }
      }

      &[data-appearance="button"] {
        >.content {
          background-color: var(--s-color, var(--c-main)) !important;
          color: var(--s-color_, var(--c-main_)) !important;
        }
      }
    }

    &[data-appearance="button"] {
      >.content {
        border: #{var.$inputBorderWidth} solid var(--s-color, var(--c-border));
        justify-content: center;
      }
    }

    &[data-appearance="point"] {
      >.check {
        &::before {
          height: 50%;
          width: 50%;
          top: 25%;
          left: 25%;
        }

        &::after {
          height: 30%;
          width: 30%;
          top: 35%;
          left: 35%;
          background-color: var(--s-color, var(--c-input_));
          border-radius: 9999px;
        }
      }

      >.content {
        padding-right: #{var.$textPadding};
      }
    }

    &:is([data-appearance="check"], [data-appearance="check-fill"]) {
      >.check {
        &::before {
          top: 15%;
          left: 15%;
          width: 70%;
          height: 70%;
        }

        &::after {
          top: 22%;
          left: 37%;
          width: 28%;
          height: 45%;
          border-bottom: 0.25rem solid var(--s-color, var(--c-input_));
          border-right: 0.25rem solid var(--s-color, var(--c-input_));
          transform: rotate(45deg);
          background: transparent;
        }
      }

      >.content {
        padding-right: #{var.$textPadding};

        >.label {
          padding-left: #{var.$textPaddingThin};
        }
      }
    }

    &[data-appearance="check-fill"] {
      >.check {
        &::after {
          border-color: var(--s-color_, var(--c-main_));
        }
      }

      &[data-selected="true"] {
        >.check {
          &::before {
            background-color: var(--s-color, var(--c-main)) !important;
          }
        }
      }
    }

    &[data-outline="true"] {
      border: #{var.$inputBorderWidth} solid var(--s-color, var(--c-border));
      border-radius: 9999px;
    }
  }

  .check {
    box-sizing: border-box;
    position: relative;
    height: var(--cs-m);
    width: var(--cs-m);
    flex: none;

    &::before {
      box-sizing: border-box;
      position: absolute;
      content: "";
      border-radius: 9999px;
      border: #{var.$inputBorderWidth} solid var(--s-color, var(--c-border));
      transition: background-color #{var.$transitionTime};
    }

    &::after {
      box-sizing: border-box;
      position: absolute;
      content: "";
      z-index: 1;
      opacity: 0;
      transition: opacity #{var.$transitionTime};
    }
  }

  .content {
    box-sizing: border-box;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    height: 100%;
    flex: 1 1 0rem;
    transition: background-color #{var.$transitionTime},
    color #{var.$transitionTime};
  }

}