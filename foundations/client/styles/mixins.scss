@use "./var" as var;

@mixin sp() {
  @media screen and (max-width: 480px) {
    @content;
  }
}

@mixin notSp() {
  @media screen and (min-width: 480px) {
    @content;
  }
}

@mixin focusOutline($color: inherit) {
  outline: 0.2rem solid $color;
}

@mixin outline($color: inherit) {
  outline: 0.2rem solid $color;
}

@mixin crossHover($zindex: 9) {
  @media (hover: hover) {
    &:hover {
      @content;

      @if $zindex !=false {
        z-index: #{$zindex};
      }
    }
  }

  @media (hover: none) {
    &:active {
      @content;

      @if $zindex !=false {
        z-index: #{$zindex};
      }
    }
  }
}

@mixin buttonHoverAnimation($color: inherit) {
  @include outline($color);
  outline-offset: 0rem;

  &:global {
    animation: buttonHover 1s infinite;
  }
}

@mixin buttonHoverActive {
  outline-offset: 0.1rem;
  animation: none;
}

@mixin buttonHoverAnimationKeyframes {
  @keyframes buttonHover {
    100% {
      outline-color: transparent;
      outline-offset: .4rem;
    }
  }
}

@mixin inputButtonHoverable($addonTransition: null) {
  @if ($addonTransition ==null) {
    transition: opacity #{var.$transitionTime},
    box-shadow #{var.$transitionTime};
  }

  @else {
    transition: #{$addonTransition},
    opacity #{var.$transitionTime},
    box-shadow #{var.$transitionTime};
  }
}

@mixin inputButtonHoverAnimation {
  box-shadow: 0 0.1rem 0.6rem 0.1rem var(--c-shadow);
}

@mixin inputButtonHoverActive {
  box-shadow: 0 0 0.1rem 0 var(--c-shadow);
}

@mixin inputButtonHoverAnimationKeyframes {}


@mixin inputProps($customWidth: false) {
  box-sizing: border-box;
  border: none;
  background: transparent;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  z-index: 1;
  resize: none;
  outline: none;

  @if $customWidth ==false {
    flex: 1;
    padding: calc(var(--pt-t) + 0.1rem) #{var.$textPadding} 0 #{var.$textPadding};
  }

  &[data-align="left"] {
    text-align: left;
  }

  &[data-align="center"] {
    text-align: center;
  }

  &[data-align="right"] {
    text-align: right;
  }
}

@mixin inputButtonHover($addonTransition: null) {
  @include inputButtonHoverable($addonTransition);

  &:not([data-disabled="true"]):not(:disabled) {
    cursor: pointer;
    user-select: none;

    @include crossHover {
      @include inputButtonHoverAnimation;

      &:active {
        @include inputButtonHoverActive;
      }
    }
  }
}

@mixin inputButton($customSize: false) {
  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  flex: none;
  z-index: 1;
  user-select: none;
  border-radius: var(--radius);
  @include inputButtonHoverable;

  @if $customSize ==false {
    height: var(--cs-m);
    width: var(--cs-m);
  }

  &[data-round="true"] {
    border-radius: 9999px;
  }

  &[data-disabled="true"] {
    opacity: 0.2;
    cursor: inherit;
    pointer-events: none;
  }

  @include inputButtonHover;
}

@mixin listHoverTransition($addonTransition: null) {
  @if ($addonTransition ==null) {
    transition: background-color 0.1s, color 0.1s;
  }

  @else {
    transition: #{$addonTransition},
    background-color 0.1s,
    color 0.1s;
  }
}

@mixin listHoverAnimation {
  background-color: var(--c-hover);
  color: var(--c-hover_);
}

@mixin listHoverActive {
  background-color: var(--c-selected);
  color: var(--c-selected_);
}

@mixin listHover($addonTransition: null) {
  @include listHoverTransition($addonTransition);

  @include crossHover {
    @include listHoverAnimation;

    &:active {
      @include listHoverActive;
    }
  }
}

@mixin popupShadow {
  box-shadow: 0 .1rem .8rem 0 var(--c-shadow) !important;
  border-radius: var(--radius);
}

@mixin scrollOverlay($thumbColor: var(--c-scroll), $noOverflow: false) {
  @if $noOverflow ==false {
    overflow: auto;
    overflow: overlay;
  }

  &::-webkit-scrollbar {
    height: 0.5rem !important;
    width: 0.5rem !important;
    background: transparent !important;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 0.2rem;
    background: $thumbColor;
  }
}