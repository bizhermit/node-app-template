@use "#/styles/var" as var;

// $hoverStyle: "outline";
$hoverStyle: "float";
$hoverTransition: box-shadow 0.1s;
$listHoverTransition: background-color 0.1s, color 0.1s;

@mixin sp() {
  @media screen and (max-width: 480px) {
    @content;
  }
}

@mixin notSp() {
  @media screen and (min-width: 480px) {
    @content;
  }
}

@mixin outline($variableColor: true) {
  @if $variableColor== true {
    outline-width: 0.2rem;
    outline-style: solid;
  } @else {
    outline: 0.2rem solid var(--c-main);
  }
}

@mixin hover {
  @if $hoverStyle == "outline" {
    outline: solid;
    outline-offset: 0rem;
    animation: hover 1s infinite;
  } @else if $hoverStyle == "float" {
    box-shadow: 0 0.1rem 0.6rem 0.2rem var(--c-shadow) !important;
  } @else {
  }
}

@mixin hoverable {
  box-shadow: 0 0.1rem 0.3rem 0.1rem var(--c-shadow) !important;
}

@mixin hoverActive {
  @if $hoverStyle == "outline" {
    outline: solid;
    outline-offset: 0.1rem;
    animation: none;
  } @else if $hoverStyle == "float" {
    box-shadow: 0 0 0.1rem 0 var(--c-shadow) !important;
  } @else {
  }
}

@mixin hoverAnimation {
  @if $hoverStyle == "outline" {
    @keyframes hover {
      100% {
        outline-color: transparent;
        outline-offset: .4rem;
      }
    }
  } @else if $hoverStyle == "float" {
  } @else {
  }
}

@mixin hoverTransition($others: null) {
  @if $hoverStyle == "outline" {
  } @else if $hoverStyle == "float" {
    @if ($others == null) {
      transition: #{$hoverTransition};
    } @else {
      transition: #{$others}, #{$hoverTransition};
    }
  } @else {
  }
}

@mixin listHover {
  background: var(--c-hover);
}

@mixin listHoverActive {
  background: var(--c-selected);
}

@mixin listHoverTransition($others: null) {
  @if ($others == null) {
    transition: #{$listHoverTransition};
  } @else {
    transition: #{$others}, #{$listHoverTransition};
  }
}

@mixin crossHover($zindex: 9) {
  @media (hover: hover) {
    &:hover {
      @content;

      @if $zindex !=false {
        z-index: #{$zindex};
      }
    }
  }

  @media (hover: none) {
    &:active {
      @content;

      @if $zindex !=false {
        z-index: #{$zindex};
      }
    }
  }
}

@mixin inputProps($customWidth: false) {
  box-sizing: border-box;
  border: none;
  background: transparent;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  z-index: 1;
  resize: none;
  outline: none;

  @if $customWidth ==false {
    flex: 1;
    padding: calc(var(--pt-t) + 0.1rem) #{var.$textPadding} 0 #{var.$textPadding};
  }

  &[data-align="left"] {
    text-align: left;
  }

  &[data-align="center"] {
    text-align: center;
  }

  &[data-align="right"] {
    text-align: right;
  }
}

@mixin inputButton($customSize: false) {
  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  flex: none;
  z-index: 1;
  user-select: none;
  border-radius: var(--radius);
  transition: opacity #{var.$transitionTime};

  @if $customSize ==false {
    height: var(--cs-m);
    width: var(--cs-m);
  }

  &[data-round="true"] {
    border-radius: 9999px;
  }

  &[data-disabled="true"] {
    opacity: 0.2;
    cursor: inherit;
    pointer-events: none;
  }

  &:not([data-disabled="true"]) {
    cursor: pointer;
    @include hoverTransition;

    @include crossHover {
      @include hover;

      &:active {
        @include hoverActive;
      }
    }
  }
}

@mixin pickerShadow {
  box-shadow: 0 .1rem .8rem 0 var(--c-shadow) !important;
  border-radius: var(--radius);
}

@mixin scrollOverlay($thumbColor: var(--c-scroll), $noOverflow: false) {
  @if $noOverflow ==false {
    overflow: auto;
    overflow: overlay;
  }

  &::-webkit-scrollbar {
    height: 0.5rem !important;
    width: 0.5rem !important;
    background: transparent !important;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: 0.2rem;
    background: $thumbColor;
  }
}