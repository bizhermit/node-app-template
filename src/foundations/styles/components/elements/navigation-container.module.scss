@use "#/styles/var" as var;
@use "#/styles/mixins" as mixins;

$shadowWidth: .3rem;
$shadowPadding: .2rem;

@layer base {

  .wrap {
    box-sizing: border-box;
    display: flex;
    flex-flow: column nowrap;
    justify-content: stretch;
    align-items: stretch;
    overflow: hidden;
  }

  .header,
  .footer {
    box-sizing: border-box;
    display: flex;
    flex-flow: row nowrap;
    justify-content: stretch;
    align-items: center;
    overflow: hidden;
    flex: none;
    z-index: 3;
    padding: 0;
    margin: 0;

    .contents {
      box-sizing: border-box;
      display: flex;
      flex-flow: row nowrap;
      justify-content: stretch;
      align-items: center;
      overflow: hidden;
      flex: 1;
    }

    .button {
      box-sizing: border-box;
      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      user-select: none;
      height: var(--cs-m);
      width: var(--cs-m);
    }
  }

  .header {
    min-height: var(---cs-m);
    background: var(--c-nav);
    color: var(--c-nav_);
    box-shadow: 0 .1rem #{$shadowWidth} 0 var(--c-shadow);

    &[data-pos="right"] {
      flex-direction: row-reverse;
    }

    +.body {
      >.nav {
        padding-top: #{$shadowPadding};
      }

      >.content {
        >.main {
          padding-top: #{$shadowPadding};
        }
      }
    }
  }

  .footer {
    background: var(--c-dull);
    color: var(--c-dull_);
  }

  .body {
    box-sizing: border-box;
    position: relative;
    display: flex;
    justify-content: stretch;
    align-items: stretch;
    flex-wrap: nowrap;
    flex: 1;
    min-height: 0;
    overflow: visible;
    z-index: 2;
    transition: padding #{var.$transitionTime};

    &[data-pos="left"] {
      flex-direction: row;

      &[data-mode="minimize"] {
        padding-left: var(--nav-size);
      }
    }

    &[data-pos="right"] {
      flex-direction: row-reverse;

      &[data-mode="minimize"] {
        padding-right: var(--nav-size);
      }
    }

    &[data-pos="top"] {
      flex-direction: column;
    }

    &[data-pos="bottom"] {
      flex-direction: column-reverse;
    }
  }

  .nav {
    box-sizing: border-box;
    position: relative;
    display: flex;
    flex-wrap: nowrap;
    justify-content: flex;
    align-items: stretch;
    flex: none;
    z-index: 2;
    background: var(--c-nav);
    color: var(--c-nav_);
    @include mixins.scrollOverlay(var(--c-scroll_));

    &[data-pos="left"],
    &[data-pos="right"] {
      flex-direction: column;
      height: 0;
      min-height: 100%;
      max-width: 100%;

      &[data-mode="minimize"],
      &[data-mode="manual"] {
        position: absolute;
        top: 0;
      }
    }

    &[data-pos="left"] {
      left: 0;
      box-shadow: .1rem 0 #{$shadowWidth} 0 var(--c-shadow);

      &[data-mode="visible"],
      &[data-mode="minimize"] {
        +.content {
          >.main {
            padding-left: #{$shadowPadding};
          }
        }
      }
    }

    &[data-pos="right"] {
      right: 0;
      box-shadow: -.1rem 0 #{$shadowWidth} 0 var(--c-shadow);

      &[data-mode="visible"],
      &[data-mode="minimize"] {
        +.content {
          >.main {
            padding-right: #{$shadowPadding};
          }
        }
      }
    }

    &[data-pos="top"],
    &[data-pos="bottom"] {
      flex-direction: row;
      width: 100%;
      max-height: 100%;
      overflow: visible;

      &[data-mode="minimize"],
      &[data-mode="manual"] {
        position: absolute;
        left: 0;
      }
    }

    &[data-pos="top"] {
      top: 0;
      box-shadow: 0 .1rem #{$shadowWidth} 0 var(--c-shadow);

      &[data-mode="visible"],
      &[data-mode="minimize"] {
        +.content {
          >.main {
            padding-top: #{$shadowPadding};
          }
        }
      }
    }

    &[data-pos="bottom"] {
      bottom: 0;
      align-items: flex-end;
      box-shadow: 0 -.1rem #{$shadowWidth} 0 var(--c-shadow);

      &[data-mode="visible"],
      &[data-mode="minimize"] {
        +.content {
          padding-bottom: #{$shadowPadding};
        }
      }
    }
  }

  .mask {
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: var(--c-mask);
    z-index: 1;
  }

  .content {
    box-sizing: border-box;
    display: flex;
    flex-flow: column nowrap;
    justify-content: stretch;
    align-items: stretch;
    flex: 1 1 0;
    overflow: auto;
    z-index: 0;
  }

  .main {
    box-sizing: border-box;
    position: relative;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex;
    align-items: flex;
    overflow: auto;
    z-index: 0;
    min-height: 0;
    min-width: 0;

    &[data-footer="end"] {
      flex: 1 0 auto;
    }

    &[data-footer="always"] {
      flex: 1 0 0rem;
    }
  }

}