@use "#/styles/var" as var;
@use "#/styles/mixins" as mixins;

@layer base {

  .wrap {
    box-sizing: border-box;
    position: relative;
    padding: 0;
    flex: none;
    overflow: visible;
    font-family: inherit;
    background: none;
    border: none;
    border-radius: var(--radius);
    outline: none;
    max-width: 100%;
    max-height: 100%;

    &.link {
      width: 100%;
      height: 100%;
    }

    &:not(:disabled) {
      cursor: pointer;

      >.main {
        @include mixins.hoverable;
      }

      &:focus {
        >.main {
          @include mixins.outline;
          outline-offset: 0.1rem;
        }
      }

      @include mixins.crossHover {
        .main {
          @include mixins.hover;

          &:active {
            @include mixins.hoverActive;
          }
        }
      }
    }

    &:disabled {
      opacity: #{var.$disabledOpacity};
    }

    &[data-round="true"] {
      border-radius: 9999px;

      >.main {
        border-radius: 9999px;
      }
    }

    @each $size in var.$sizes {
      &[data-size="#{$size}"] {
        --is: var(--is-#{$size});
        font-size: var(--fs-#{$size});
        min-width: var(--cs-#{$size});
        height: var(--cs-#{$size});

        &[data-wide="true"] {
          min-width: calc(var(--cs-#{$size}) * 4);
        }

        >.main {
          >.label {
            padding-left: calc(var(--cs-#{$size}) / 2);
            padding-right: calc(var(--cs-#{$size}) / 2);
          }

          >.icon {
            &:not(:only-child) {
              min-width: var(--cs-#{$size});
            }
          }
        }
      }
    }
  }

  @include mixins.hoverAnimation;

  .main {
    box-sizing: border-box;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    border-radius: var(--radius);
    height: 100%;
    width: 100%;
    border: 0.15rem solid var(--c-border);
    @include mixins.hoverTransition;

    &[data-icon="left"] {
      >.label {
        padding-left: 0 !important;
      }
    }

    &[data-icon="right"] {
      >.label {
        padding-right: 0 !important;
      }
    }
  }

  .label {
    box-sizing: border-box;
    text-overflow: ellipsis;

    &[data-fill="true"] {
      flex: 1 0 0rem;
    }
  }

  .icon {
    box-sizing: border-box;
    position: relative;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
    height: 100%;

    &:only-child {
      width: 100%;
    }
  }

}