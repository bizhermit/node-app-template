@use "#/styles/var" as var;

:root {
  --base: #{var.$base};
  --b-sx: #{var.$base * 1};
  --b-s: #{var.$base * 2};
  --b-m: #{var.$base * 4};
  --b-l: #{var.$base * 6};
  --b-lx: #{var.$base * 8};
  --size: #{var.$size};
  --font-size: #{var.$fontSize};
  --icon-size: #{var.$iconSize};
  --padding-top-text: 0.1rem;
  --nav-size: #{var.$size};
  outline: var(--c-base_) !important;
}

html {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  height: 100%;
  width: 100%;
  font-size: 62.5%;
  background: var(--c-base);
  color: var(--c-base_);
}

body {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  height: 100%;
  width: 100%;
  font-size: var(--font-size);

  &:has(dialog[open]) {
    overflow: hidden;
  }
}

#__next {
  box-sizing: border-box;
  height: 100%;
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  overflow: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin-block: unset;
}

::placeholder {
  color: var(--c-placeholder_);
  opacity: #{var.$placeholderOpacity};
}

.icon {
  &[height="0"] {
    height: var(--icon-size);
    width: var(--icon-size);
  }
}

svg {
  &.icon {
    &:not(.react-icon) {
      fill: currentColor;
      stroke: currentColor;
      stroke-width: 0.15rem;
      stroke-linecap: round;
      stroke-linejoin: round;
    }
  }
}

.plain-text {
  text-decoration: none;
  color: inherit;
}