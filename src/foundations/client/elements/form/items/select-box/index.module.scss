@use "../../../../styles/mixins" as mixins;
@use "../../../../styles/var" as var;

@layer base {

  .input {
    @include mixins.inputProps;
    height: var(--cs-m);
    min-width: 0;

    &[data-has="false"] {
      color: var(--c-dull_);
    }

    &[data-editable="true"] {
      &[data-input="false"] {
        cursor: pointer;
      }
    }

    &[data-button="true"] {
      padding-right: #{var.$textPaddingThin};
    }
  }

  .button {
    @include mixins.inputButton;
  }

  .mask {
    box-sizing: border-box;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--c-mask);
    z-index: 1;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.2s;
    
    &[data-show="true"] {
      pointer-events: all;
      opacity: 1;
      cursor: wait;
    }
  }

  .list {
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: stretch;
    overflow: auto;
    outline: none;
    border-radius: var(--radius);
    z-index: 0;
  }

  .item {
    box-sizing: border-box;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
    align-items: center;
    padding: var(--pt-t) #{var.$textPadding} 0 #{var.$textPadding};
    height: var(--cs-m);
    flex: none;
    background: var(--c-input);
    color: var(--c-input_);
    z-index: 0;
    outline: none;
    @include mixins.listHover;
    cursor: pointer;

    &:focus {
      background: var(--c-hover);
      color: var(--c-hover_);
    }

    &[data-selected="true"] {
      background: var(--c-selected);
      color: var(--c-selected_);
    }

    &[data-empty="true"] {
      color: var(--c-dull_);
    }
  }

  .popup {
    @include mixins.popupShadow;
    background: var(--c-input);
  }

}