@use "$/var";
@use "$/mixins";

.main {
  &[data-disabled="false"] {
    >.item {
      &:focus {
        @include mixins.outline;
      }
    }
  }

  &[data-editable="true"] {
    >.item {
      cursor: pointer;
      user-select: none;

      >.box {
        &::before {
          background: var(--c-input);
        }
      }

      @include mixins.crossHover {}

      &:not([data-outline="true"]) {
        outline-color: var(--c-main);
        
        >.box {
          &::before {
            @include mixins.hoverTransition;
          }
        }

        @include mixins.crossHover {
          >.box {
            &::before {
              @include mixins.hover;
            }
          }

          &:active {
            >.box {
              &::before {
                @include mixins.hoverActive;
              }
            }
          }
        }
      }

      &[data-outline="true"] {
        outline-offset: -0.1rem;
        @include mixins.hoverTransition;

        @include mixins.crossHover {
          @include mixins.hover;

          &:active {
            @include mixins.hoverActive;
          }
        }
      }

      &[data-appearance="button"] {
        @include mixins.crossHover {
          @include mixins.hover;

          &:active {
            @include mixins.hoverActive;
          }
        }

        >.label {
          background: var(--c-input);
        }
      }
    }

    &[data-error="true"] {
      >.item {
        >.box {
          &::before {
            background: var(--c-error);
          }
        }
      }
    }
  }

  &[data-direction="horizontal"] {
    flex-wrap: wrap;

    >.item {
      height: var(--size);

      &[data-appearance="button"] {
        &:first-child {
          >.label {
            border-top-left-radius: var(--radius);
            border-bottom-left-radius: var(--radius);
          }
        }

        &:last-child {
          >.label {
            border-top-right-radius: var(--radius);
            border-bottom-right-radius: var(--radius);
          }
        }

        >.label {
          padding-left: calc(var(--size) / 2);
          padding-right: calc(var(--size) / 2);
        }
      }

      >.label {
        padding-right: calc(var(--size) / 4);
      }
    }
  }

  &[data-direction="vertical"] {
    flex-direction: column;
    align-items: stretch;

    >.item {
      &[data-appearance="button"] {
        flex: 1 0 0rem;

        &:first-child {
          >.label {
            border-top-left-radius: var(--radius);
            border-top-right-radius: var(--radius);
          }
        }

        &:last-child {
          >.label {
            border-bottom-left-radius: var(--radius);
            border-bottom-right-radius: var(--radius);
          }
        }
      }

      >.label {
        padding-right: calc(var(--size) / 4);
      }
    }
  }

  &[data-outline="true"] {
    gap: 0.8rem;
  }
}

@include mixins.hoverAnimation;

.item {
  box-sizing: border-box;
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  min-width: var(--size);
  min-height: var(--size);
  z-index: 0;
  flex: 1 0 auto;
  border-radius: var(--radius);

  &[data-appearance="button"] {
    >.label {
      padding-left: calc(var(--size) / 4);
      ;
      border-width: 0.1rem;
      border-style: solid;
      border-color: inherit;
      justify-content: center;
    }
  }

  &[data-appearance="point"] {
    >.box {
      &::before {
        box-sizing: border-box;
        position: absolute;
        content: "";
        border-width: 0.1rem;
        border-style: solid;
        border-color: inherit;
        border-radius: 9999px;
        height: 50%;
        width: 50%;
        top: 25%;
        left: 25%;
      }

      >.check {
        height: calc(var(--size) * 0.3);
        width: calc(var(--size) * 0.3);
        top: 35%;
        left: 35%;
      }
    }
  }

  &[data-appearance="check"],
  &[data-appearance="check-outline"] {
    >.box {
      &::before {
        box-sizing: border-box;
        position: absolute;
        content: "";
        border-width: 0.1rem;
        border-style: solid;
        border-color: inherit;
        border-radius: 9999px;
        height: 70%;
        width: 70%;
        top: 15%;
        left: 15%;
      }

      >.check {
        height: calc(var(--size) * 0.7);
        width: calc(var(--size) * 0.7);
        top: 15%;
        left: 15%;

        &::before {
          box-sizing: border-box;
          position: absolute;
          content: "";
          top: 14%;
          left: 32%;
          width: 37%;
          height: 60%;
          border-bottom-width: 0.25rem;
          border-bottom-style: solid;
          border-bottom-color: inherit;
          border-right-width: 0.25rem;
          border-right-style: solid;
          border-right-color: inherit;
          transform: rotate(45deg);
        }
      }
    }

    >.label {
      padding-left: calc(var(--size) / 8);
    }
  }

  &[data-outline="true"] {
    border: 0.1rem solid var(--c-border);
    border-radius: 9999px;
  }
}

.box {
  box-sizing: border-box;
  position: relative;
  height: var(--size);
  width: var(--size);
  flex: none;
}

.check {
  box-sizing: border-box;
  position: absolute;
  border-radius: 9999px;
  opacity: 0;
  transition: opacity #{var.$transitionTime};

  &[data-selected="true"] {
    opacity: 1;
  }
}

.label {
  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  height: 100%;
  flex: 1;
  transition: background-color #{var.$transitionTime},
  color #{var.$transitionTime};
}