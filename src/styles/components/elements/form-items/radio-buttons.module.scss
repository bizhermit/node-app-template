@use "$/animation";

.main {
  &[data-editable="true"] {
    >.item {
      cursor: pointer;
      user-select: none;

      >.box {
        &::before {
          background: var(--c-input);
        }
      }

      &:hover {
        z-index: 1;

        >.box {
          &::before {
            @include animation.hover;
          }
        }

        &:active {
          >.box {
            &::before {
              @include animation.hoverActive;
            }
          }
        }
      }

      &[data-appearance="button"] {
        &:hover {
          @include animation.hover;

          &:active {
            @include animation.hoverActive;
          }
        }

        >.label {
          background: var(--c-input);
        }
      }
    }
  }

  &[data-direction="horizontal"] {
    flex-wrap: wrap;

    >.item {
      height: var(--size);
    }

    .label {
      padding-right: 1rem
    }
  }

  &[data-direction="vertical"] {
    flex-direction: column;
  }
}

@include animation.hoverAnimation;

.item {
  box-sizing: border-box;
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  min-width: var(--size);
  min-height: var(--size);
  z-index: 0;

  &[data-appearance="button"] {
    &:first-child {
      >.label {
        border-top-left-radius: var(--radius);
        border-bottom-left-radius: var(--radius);
      }
    }

    &:last-child {
      >.label {
        border-top-right-radius: var(--radius);
        border-bottom-right-radius: var(--radius);
      }
    }

    >.label {
      padding-left: 1rem;
      border-width: 0.1rem;
      border-style: solid;
      border-color: inherit;
    }
  }
}

.box {
  box-sizing: border-box;
  position: relative;
  height: var(--size);
  width: var(--size);

  &::before {
    box-sizing: border-box;
    position: absolute;
    content: "";
    border-width: 0.1rem;
    border-style: solid;
    border-color: inherit;
    border-radius: 9999px;
    height: 50%;
    width: 50%;
    top: 25%;
    left: 25%;
  }
}

.check {
  box-sizing: border-box;
  position: absolute;
  height: calc(var(--size) * 0.3);
  width: calc(var(--size) * 0.3);
  border-radius: 9999px;
  top: 35%;
  left: 35%;
  opacity: 0;
  transition: opacity 0.2s;

  &[data-selected="true"] {
    opacity: 1;
  }
}

.label {
  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  height: 100%;
  flex: 1;
  transition: background 0.2s, color 0.2s;
}