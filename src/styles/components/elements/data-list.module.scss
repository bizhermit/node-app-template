@use "$/mixins";
$borderStyle: 1px solid var(--c-border);

.wrap {
  box-sizing: border-box;
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  overflow: visible;
}

.class {
  box-sizing: border-box;
  position: relative;
  min-height: 0;
  width: 100%;
  flex: 1 1 0rem;
  outline: none;
  position: relative;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  overflow: auto;
  border-radius: var(--radius);

  &[data-border] {
    border: #{$borderStyle};
  }
}

.header,
.footer,
.body {
  box-sizing: border-box;
  position: sticky;
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  overflow: hidden;
  width: 100%;
  left: 0;
}

.header {
  z-index: 2;
  top: 0;
}

.footer {
  z-index: 2;
}

.body {
  z-index: 1;
  cursor: cell;
}

.dummy {
  box-sizing: border-box;
  position: absolute;
  z-index: 0;
  top: 0;
  left: 0;
  background: transparent;
  visibility: hidden;
  flex: none;
  min-width: 100%;
}

.row,
.crow {
  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: flex-start;
  flex: none;
  width: 100%;
  white-space: nowrap;
  background: inherit;

  &:not(:first-child) {
    &[data-border] {
      border-top: #{$borderStyle};
    }
  }
}

.crow {
  flex: 1;
}

.brow {
  background: var(--c-pure);

  &[data-stripes="true"] {
    &:nth-child(2n) {
      background: var(--c-dull);
    }
  }

  @include mixins.crossHover {
    background: var(--c-hover) !important;
  }

  &:has(>.radio:checked) {
    background: var(--c-selected) !important;
  }
}

.cell {
  box-sizing: border-box;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  flex: none;
  height: 100%;
  overflow: hidden;
  z-index: 0;
  background: inherit;

  &[data-align="left"] {
    justify-content: flex-start;
  }

  &[data-align="center"] {
    justify-content: center;
  }

  &[data-align="right"] {
    justify-content: flex-end;
  }

  &[data-fill] {
    flex: 1;
    min-width: 0;
  }

  &[data-fixed] {
    position: sticky;
  }

  &[data-row] {
    flex-flow: column nowrap;
  }

  &:not(:first-child) {
    &[data-border] {
      border-left: #{$borderStyle};
    }
  }
}

.bcell {
  @include mixins.crossHover {
    background: var(--c-selected);
  }
}

.label {
  box-sizing: border-box;
  position: relative;
  display: block;
  max-height: 100%;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding: var(--padding-top-text) 1rem 0 1rem;
}