@use "$/var";

@media (prefers-color-scheme: light) {
  :root {

    @each $key, $value in var.$colorMap {
      $val: map-get($value, light);
      $val_r: map-get($value, light_r);
      --c-#{$key}: #{$val};
      @if $val_r == null {
        $invert: invert(darken($val, 30%));
        @if lightness($invert)>50 {
          --c-#{$key}_: #{lighten($invert, 100%)};
        } @else {
          --c-#{$key}_: #{darken($invert, 100%)};
        }
      } @else {
        --c-#{$key}_: #{$val_r};
      }
    }
  }
}

@media (prefers-color-scheme: dark) {
  :root {

    @each $key, $value in var.$colorMap {
      $val: map-get($value, dark);
      $val_r: map-get($value, dark_r);
      --c-#{$key}: #{$val};
      @if $val_r == null {
        $invert: invert(darken($val, 30%));
        @if lightness($invert)>50 {
          --c-#{$key}_: #{lighten($invert, 100%)};
        } @else {
          --c-#{$key}_: #{darken($invert, 100%)};
        }
      } @else {
        --c-#{$key}_: #{$val_r};
      }
    }
  }

  html {
    color-scheme: dark;
  }
}

@each $key, $value in var.$colorMap {
  $hasR: map-get($value, "light_r") != null;
  .c-#{$key} {
    background: var(--c-#{$key}) !important;
    color: var(--c-#{$key}_) !important;
  }
  .bgc-#{$key} {
    background: var(--c-#{$key}) !important;
  }
  .bgc-#{$key}_r {
    background: var(--c-#{$key}_) !important;
  }
  .fgc-#{$key} {
    @if $hasR {
      color: var(--c-#{$key}_) !important;
    } @else {
      color: var(--c-#{$key}) !important;
    }
  }
  .bdc-#{$key} {
    @if $hasR {
      border-color: var(--c-#{$key}_) !important;
    } @else {
      border-color: var(--c-#{$key}) !important;
    }
  }
  .bdc-#{$key}_r {
    border-color: var(--c-#{$key}_) !important;
  }
}